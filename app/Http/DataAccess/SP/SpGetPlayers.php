<?php

/**
 * AUTO GENERATED BY LUTICATE GENERATOR
 * ANY CHANGES WILL BE OVERWRITTEN
 */

namespace App\Http\DataAccess\SP;

use Luticate\Utils\LuSpDbo;
use Luticate\Utils\LuMultipleDbo;
use Luticate\Utils\LuStringUtils;
use Illuminate\Support\Facades\DB;

class SpGetPlayers extends LuSpDbo {

    /**
    * @param $dam
    * @return \App\Http\DataAccess\SP\SpGetPlayers|null
    */
    protected static function damToDbo($dam)
    {
        if (is_null($dam))
            return null;
        $dbo = new SpGetPlayers();

        $dbo->setPlayers(LuStringUtils::convertJsonString($dam->players));

        return $dbo;
    }


    /**
    * @param $query string
    * @return \App\Http\DataAccess\SP\SpGetPlayers[];
    */
    public static function execute($query)
    {
        $values = DB::select('SELECT to_json(data.players) AS players FROM sp_get_players(:query) data', array(":query" => $query));
        $dboValues = array();
        foreach ($values as $value)
            $dboValues[] = self::damToDbo($value);
        return $dboValues;
    }

    /**
    * @param $query string
    * @param $page int The page number, 0 based
    * @param $perPage int The number of items per page
    * @return \Luticate\Utils\LuMultipleDbo;
    */
    public static function getMultipleJson($query, $page, $perPage)
    {
        $values = DB::select('SELECT (SELECT count(*) FROM sp_get_players(:query)) as count, (SELECT json_agg(q) FROM (SELECT * FROM sp_get_players(:query) OFFSET (:page::int * :perPage::int) LIMIT :perPage) q) as data',
            array(":query" => $query, ":page" => $page, ":perPage" => $perPage));
        $value = $values[0];
        if (is_null($value->data))
        {
            $value->data = '[]';
        }
        $data = LuStringUtils::convertJsonString($value->data);
        return new LuMultipleDbo($value->count, $data);
    }

    public function jsonSerialize()
    {
        return array(
            "Players" => $this->_players
        );
    }

    public static function jsonDeserialize($json)
    {
        $dbo = new SpGetPlayers();
        if (isset($json["Players"])) {
            $dbo->setPlayers($json["Players"]);
        }
        return $dbo;
    }

    public static function generateSample()
    {
        $dbo = new SpGetPlayers();
        $dbo->setPlayers("sample string");
        return $dbo;
    }


    /**
    * @var USER-DEFINED
    */
    protected $_players;
    public function getPlayers()
    {
        return $this->_players;
    }
    public function setPlayers($value)
    {
        $this->_players = $value;
    }
}
