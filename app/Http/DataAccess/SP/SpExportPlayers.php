<?php

/**
 * AUTO GENERATED BY LUTICATE GENERATOR
 * ANY CHANGES WILL BE OVERWRITTEN
 */

namespace App\Http\DataAccess\SP;

use Luticate\Utils\LuSpDbo;
use Luticate\Utils\LuMultipleDbo;
use Luticate\Utils\LuStringUtils;
use Illuminate\Support\Facades\DB;

class SpExportPlayers extends LuSpDbo {

    /**
    * @param $dam
    * @return \App\Http\DataAccess\SP\SpExportPlayers|null
    */
    protected static function damToDbo($dam)
    {
        if (is_null($dam))
            return null;
        $dbo = new SpExportPlayers();

        $dbo->setName(LuStringUtils::convertJsonString($dam->name));
        $dbo->setW1(LuStringUtils::convertJsonString($dam->w1));
        $dbo->setT1(LuStringUtils::convertJsonString($dam->t1));
        $dbo->setP1(LuStringUtils::convertJsonString($dam->p1));
        $dbo->setW3(LuStringUtils::convertJsonString($dam->w3));
        $dbo->setT3(LuStringUtils::convertJsonString($dam->t3));
        $dbo->setP3(LuStringUtils::convertJsonString($dam->p3));
        $dbo->setAge(LuStringUtils::convertJsonString($dam->age));
        $dbo->setRank(LuStringUtils::convertJsonString($dam->rank));

        return $dbo;
    }


    /**
    * @param $in_j1 string
    * @param $in_j2 string
    * @param $in_date date
    * @return \App\Http\DataAccess\SP\SpExportPlayers[];
    */
    public static function execute($in_j1, $in_j2, $in_date)
    {
        $values = DB::select('SELECT to_json(data.name) AS name, to_json(data.w1) AS w1, to_json(data.t1) AS t1, to_json(data.p1) AS p1, to_json(data.w3) AS w3, to_json(data.t3) AS t3, to_json(data.p3) AS p3, to_json(data.age) AS age, to_json(data.rank) AS rank FROM sp_export_players(:in_j1, :in_j2, :in_date) data', array(":in_j1" => $in_j1, ":in_j2" => $in_j2, ":in_date" => $in_date));
        $dboValues = array();
        foreach ($values as $value)
            $dboValues[] = self::damToDbo($value);
        return $dboValues;
    }

    /**
    * @param $in_j1 string
    * @param $in_j2 string
    * @param $in_date date
    * @param $page int The page number, 0 based
    * @param $perPage int The number of items per page
    * @return \Luticate\Utils\LuMultipleDbo;
    */
    public static function getMultipleJson($in_j1, $in_j2, $in_date, $page, $perPage)
    {
        $values = DB::select('SELECT (SELECT count(*) FROM sp_export_players(:in_j1, :in_j2, :in_date)) as count, (SELECT json_agg(q) FROM (SELECT * FROM sp_export_players(:in_j1, :in_j2, :in_date) OFFSET (:page::int * :perPage::int) LIMIT :perPage) q) as data',
            array(":in_j1" => $in_j1, ":in_j2" => $in_j2, ":in_date" => $in_date, ":page" => $page, ":perPage" => $perPage));
        $value = $values[0];
        if (is_null($value->data))
        {
            $value->data = '[]';
        }
        $data = LuStringUtils::convertJsonString($value->data);
        return new LuMultipleDbo($value->count, $data);
    }

    public function jsonSerialize()
    {
        return array(
            "Name" => $this->_name,
            "W1" => $this->_w1,
            "T1" => $this->_t1,
            "P1" => $this->_p1,
            "W3" => $this->_w3,
            "T3" => $this->_t3,
            "P3" => $this->_p3,
            "Age" => $this->_age,
            "Rank" => $this->_rank
        );
    }

    public static function jsonDeserialize($json)
    {
        $dbo = new SpExportPlayers();
        if (isset($json["Name"])) {
            $dbo->setName($json["Name"]);
        }
        if (isset($json["W1"])) {
            $dbo->setW1($json["W1"]);
        }
        if (isset($json["T1"])) {
            $dbo->setT1($json["T1"]);
        }
        if (isset($json["P1"])) {
            $dbo->setP1($json["P1"]);
        }
        if (isset($json["W3"])) {
            $dbo->setW3($json["W3"]);
        }
        if (isset($json["T3"])) {
            $dbo->setT3($json["T3"]);
        }
        if (isset($json["P3"])) {
            $dbo->setP3($json["P3"]);
        }
        if (isset($json["Age"])) {
            $dbo->setAge($json["Age"]);
        }
        if (isset($json["Rank"])) {
            $dbo->setRank($json["Rank"]);
        }
        return $dbo;
    }

    public static function generateSample()
    {
        $dbo = new SpExportPlayers();
        $dbo->setName("sample string");
        $dbo->setW1(42);
        $dbo->setT1(42);
        $dbo->setP1(42);
        $dbo->setW3(42);
        $dbo->setT3(42);
        $dbo->setP3(42);
        $dbo->setAge(42);
        $dbo->setRank(42);
        return $dbo;
    }


    /**
    * @var text
    */
    protected $_name;
    public function getName()
    {
        return $this->_name;
    }
    public function setName($value)
    {
        $this->_name = $value;
    }

    /**
    * @var integer
    */
    protected $_w1;
    public function getW1()
    {
        return $this->_w1;
    }
    public function setW1($value)
    {
        $this->_w1 = $value;
    }

    /**
    * @var integer
    */
    protected $_t1;
    public function getT1()
    {
        return $this->_t1;
    }
    public function setT1($value)
    {
        $this->_t1 = $value;
    }

    /**
    * @var integer
    */
    protected $_p1;
    public function getP1()
    {
        return $this->_p1;
    }
    public function setP1($value)
    {
        $this->_p1 = $value;
    }

    /**
    * @var integer
    */
    protected $_w3;
    public function getW3()
    {
        return $this->_w3;
    }
    public function setW3($value)
    {
        $this->_w3 = $value;
    }

    /**
    * @var integer
    */
    protected $_t3;
    public function getT3()
    {
        return $this->_t3;
    }
    public function setT3($value)
    {
        $this->_t3 = $value;
    }

    /**
    * @var integer
    */
    protected $_p3;
    public function getP3()
    {
        return $this->_p3;
    }
    public function setP3($value)
    {
        $this->_p3 = $value;
    }

    /**
    * @var integer
    */
    protected $_age;
    public function getAge()
    {
        return $this->_age;
    }
    public function setAge($value)
    {
        $this->_age = $value;
    }

    /**
    * @var integer
    */
    protected $_rank;
    public function getRank()
    {
        return $this->_rank;
    }
    public function setRank($value)
    {
        $this->_rank = $value;
    }
}
